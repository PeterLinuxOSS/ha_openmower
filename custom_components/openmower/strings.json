{
  "config": {
    "step": {
      "user": {
        "data": {
          "prefix": "",
          "latitude": "[%key:common::config_flow::data::latitude%]",
          "longitude": "[%key:common::config_flow::data::longitude%]"
        },
        "data_description": {
          "prefix": "Value of OM_MQTT_TOPIC_PREFIX from mower_config.txt. Assumes OM_MQTT_ENABLE=\"True\" and MQTT points to HomeAssistant MQTT server",
          "latitude": "Value of OM_DATUM_LAT from mower_config.txt",
          "longitude": "Value of OM_DATUM_LON from mower_config.txt"
        }
      }
    },
    "error": {
      "unknown": "[%key:common::config_flow::error::unknown%]"
    },
    "abort": {
      "already_configured": "[%key:common::config_flow::abort::already_configured_device%]"
    }
  },
  "services": {
    "command_idle_start_mowing": {
      "name": "Start Mowing"
    },
    "command_mowing_pause": {
      "name": "Pause Mowing"
    },
    "command_mowing_continue": {
      "name": "Continue Mowing"
    },
    "command_mowing_abort_mowing": {
      "name": "Stop Mowing"
    },
    "command_mowing_skip_area": {
      "name": "Skip Area"
    },
    "command_mowing_skip_path": {
      "name": "Skip Path"
    },
    "send_command": {
      "description": "Sends arbitrary commands to action topic",
      "fields": {
        "payload": {
          "description": "Known commands: mower_logic:idle/start_mowing\nmower_logic:mowing/pause\nmower_logic:area_recording/start_recording\nmower_logic:area_recording/exit_recording_mode\nmower_logic:area_recording/finish_discard\nmower_logic:area_recording/finish_mowing_area\nmower_logic:area_recording/finish_navigation_area\nmower_logic:area_recording/record_dock\nmower_logic:area_recording/stop_recording\nmower_logic:idle/start_area_recording\nmower_logic:mowing/abort_mowing\nmower_logic:mowing/skip_area\nmower_logic:mowing/skip_path\nmower_logic:mowing/continue",
          "name": "Command payload"
        },
        "name": "Send arbitrary command"
      }
    }
  }
}
